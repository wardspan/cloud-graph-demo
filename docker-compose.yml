services:
  neo4j:
    image: neo4j:5.15-community
    container_name: cloud-threat-neo4j
    ports:
      - "7474:7474"  # Neo4j browser
      - "7687:7687"  # Bolt protocol
    environment:
      - NEO4J_AUTH=neo4j/cloudsecurity
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
    volumes:
      - ./neo4j/data:/data
      - ./neo4j/logs:/logs
      - ./neo4j/import:/var/lib/neo4j/import
      - ./neo4j/plugins:/plugins
      - ./neo4j/init.cypher:/var/lib/neo4j/import/init.cypher
    networks:
      - cloud-threat-net
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u neo4j -p cloudsecurity 'MATCH (n) RETURN count(n);' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  dashboard:
    build: ./dashboard
    container_name: cloud-threat-dashboard
    ports:
      - "3000:80"
    depends_on:
      neo4j:
        condition: service_healthy
    networks:
      - cloud-threat-net
    environment:
      - NEO4J_URL=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=cloudsecurity

  data-loader:
    image: neo4j:5.15-community
    container_name: cloud-threat-loader
    depends_on:
      neo4j:
        condition: service_healthy
    volumes:
      - ./neo4j/init-fixed.cypher:/var/lib/neo4j/import/init.cypher
    networks:
      - cloud-threat-net
    command: >
      sh -c "
        echo 'Waiting for Neo4j to be ready...' &&
        sleep 15 &&
        echo 'Testing Neo4j connection...' &&
        cypher-shell -a bolt://neo4j:7687 -u neo4j -p cloudsecurity 'RETURN 1 as test;' &&
        echo 'Neo4j connection successful. Loading initial data...' &&
        cypher-shell -a bolt://neo4j:7687 -u neo4j -p cloudsecurity -f /var/lib/neo4j/import/init.cypher &&
        echo 'Data loading completed successfully!' &&
        echo 'Verifying data load...' &&
        cypher-shell -a bolt://neo4j:7687 -u neo4j -p cloudsecurity 'MATCH (n) RETURN count(n) as NodeCount;' &&
        echo 'Data loader finished.'
      "
    restart: "no"

networks:
  cloud-threat-net:
    driver: bridge

volumes:
  neo4j_data:
  neo4j_logs: